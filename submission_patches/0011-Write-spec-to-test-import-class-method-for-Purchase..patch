From 1cbc42540bfde93cd2f3dcfd6bcc6fb198e50f8a Mon Sep 17 00:00:00 2001
From: AlexAlt <alexandra.m.altieri@gmail.com>
Date: Thu, 19 Nov 2015 12:00:46 -0800
Subject: [PATCH 11/22] Write spec to test import class method for Purchase.
 Create code to pass spec.

---
 code_challenge/app/models/purchase.rb       | 13 +++++++++++++
 code_challenge/spec/models/purchase_spec.rb | 17 +++++++++++++++++
 2 files changed, 30 insertions(+)

diff --git a/code_challenge/app/models/purchase.rb b/code_challenge/app/models/purchase.rb
index 5f76435..b3fc8e5 100644
--- a/code_challenge/app/models/purchase.rb
+++ b/code_challenge/app/models/purchase.rb
@@ -1,3 +1,16 @@
 class Purchase < ActiveRecord::Base
   belongs_to :file_upload
+
+  def self.import(file_path, file_upload)
+
+    CSV.foreach(file_path, headers: true) do |row|
+      rh = row.to_hash
+      purchase_hash = {}
+      rh.each do |key, value|
+        key = key.sub(" ","_")
+        purchase_hash.store(key, value)
+      end
+      file_upload.purchases.create! purchase_hash
+    end
+  end
 end
\ No newline at end of file
diff --git a/code_challenge/spec/models/purchase_spec.rb b/code_challenge/spec/models/purchase_spec.rb
index 36d831b..01b3987 100644
--- a/code_challenge/spec/models/purchase_spec.rb
+++ b/code_challenge/spec/models/purchase_spec.rb
@@ -2,4 +2,21 @@ require 'rails_helper'
 
 describe Purchase do
   it { should belong_to :file_upload }
+
+  describe "#import" do
+    let(:data) { 
+      "purchaser name,item description,item price,purchase count,merchant address,merchant name\r" +
+      "Snake Plissken,$10 off $20 of food,10.0,2,987 Fake St,Bob's Pizza\r" +
+      "Amy Pond,$30 of awesome for $10,10.0,5,456 Unreal Rd,Tom's Awesome Shop\r" +
+      "Marty McFly,$20 Sneakers for $5,5.0,1,123 Fake St,Sneaker Store Emporium\r "+
+      "Snake Plissken,$20 Sneakers for $5,5.0,4,123 Fake St,Sneaker Store Emporium\r"
+      }
+
+    it 'creates new Purchases from an imported CSV file' do
+      file_upload = FileUpload.create!
+      allow(File).to receive(:open).and_return(StringIO.new(data)) 
+      Purchase.import("filename", file_upload)
+      expect(file_upload.purchases.length).to eq(4)
+    end
+  end
 end
\ No newline at end of file
-- 
2.3.2 (Apple Git-55)

